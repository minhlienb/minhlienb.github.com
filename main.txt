

































    (localdb)\MSSQLLocalDB
     private DammioEntities db = new DammioEntities();
    Cài system.linq.dynamic;

var results = _db.Mains
.OrderByDescending(a => a.Created_Date)
.ToList().ToPagedList(page ?? 1,5);

- file để các câu mình làm ở đâu
- Các bước làm theo những yêu cầu lấy các bước được hướng dẫn theo slide
- Data annotation Unit test  làm với bài mới:
- Các bước tạo Data annotation:
	+ gieo model từ db trước (mục đầu tiên có icon adapter nối tới db)
	+ Chọn ok 2 lần
	+ mở file <Field>.cs để vào chú thích
	+ thêm 2 dòng	using System.ComponentModel.DataAnnotations;
				using System.ComponentModel;
	+ thêm [DisplayName("Chú thích")]
	+ thêm [Require]
	+ Build Project trước khi tạo view
	+ Tạo controller với template mvc5 with views, using entity framework
[Required(ErrorMessage = "Phải đặt tên")]
[MaxLength(10, ErrorMessage = "Tối đa mười ký tự")]
[DisplayName("Tên")]
[DataType(DataType.Date)]
- tự tăng giá trị cho id


Phân trang:
- 	PagedList.Mvc ở NuGet.
-	Thêm thư viện trong Controller của Posts (đã được gen từ annotation trước đó)
-	Thêm thư viện trong View
<!-- Thêm thư viện -->
@model PagedList.IPagedList<DammioMVC1.Models.Link>
@using PagedList.Mvc;
<!-- Kết thúc-->
 
private BloggingContextEntities db = new BloggingContextEntities();

// GET: Posts
// 4. Tạo kích thước trang (pageSize) hay là số Link hiển thị trên 1 trang
public ActionResult Index(int? page)
{
    // 1. Tham số int? dùng để thể hiện null và kiểu int
    // page có thể có giá trị là null và kiểu int.
    int pageSize = 4;

    // 2. Nếu page = null thì đặt lại là 1.
    if (page == null) page = 1;

    // 3. Tạo truy vấn, lưu ý phải sắp xếp theo trường nào đó, ví dụ OrderBy
    // theo LinkID mới có thể phân trang.
    var posts = (from l in db.Posts
                 select l).OrderBy(x => x.PostId);



    // 4.1 Toán tử ?? trong C# mô tả nếu page khác null thì lấy giá trị page, còn
    // nếu page = null thì lấy giá trị 1 cho biến pageNumber.
    int pageNumber = (page ?? 1);

    // 5. Trả về các Link được phân trang theo kích thước và số trang.
    return View(posts.ToPagedList(pageNumber, pageSize));
}



cshtml
@model PagedList.IPagedList<Ôn_thi.Models.Post>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ImageURL)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Content)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Blog.Name)
        </th>
        <th></th>
    </tr>

<br />
<div class="row">
    <div class="col-md-6 col-lg-6 col-xs-6 col-sm-6">
        @using (Html.BeginForm("Index", "Link", FormMethod.Get))
        {
            @*<p>
                Kích thước trang: @Html.DropDownList("size", (List<SelectListItem>)ViewBag.size, new { @onchange = "this.form.submit();" })
            </p>*@
        }
    </div>
    <div class="col-md-6 col-lg-6 col-xs-6 col-sm-6 text-right">
        Trang: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
    </div>
</div>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, size = ViewBag.currentSize }))






linq:
var BlogIdEqualTo2 = from p in db.Posts
                //                     where p.BlogId == targetBlogId
                //                     select p;



Thêm dữ liệu vào db bằng linq
    // code here

Thay đổi đường dẫn của Home thành Posts
    //
Một số code razer
    //

@using (Html.BeginForm("SayHi", "Posts", FormMethod.Post))
{
    <select id="myDropdown" name="dropdown">
        <option value="tang">Tăng</option>
        <option value="giam">Giảm</option>
    </select>
    <button type="submit">Submit</button>
}
